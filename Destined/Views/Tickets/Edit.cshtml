@model Destined.Models.Ticket
@{
    ViewData["Title"] = "Редактиране на билет";
}

<div class="ticket-wrapper">
    <h1 class="page-title">Редактиране на билет</h1>

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="Id" />

        <!-- Контролите за цветовете извън билета -->
        <div class="color-controls">
            <label>Цвят лява част: <input asp-for="LeftColor" type="color" id="leftColorPicker" /></label>
            <label>Цвят дясна част: <input asp-for="RightColor" type="color" id="rightColorPicker" /></label>
            <label>Цвят на текста: <input asp-for="TextColor" type="color" id="textColorPicker" /></label>
        </div>

        <!-- Визуализация на билета -->
        <div class="real-ticket">
            <div class="ticket-left" id="ticketLeft" style="background:@Model.LeftColor; color:@Model.TextColor;">
                <h2>
                    <input asp-for="From" class="edit-input location-input" placeholder="От" maxlength="22" required />
                    <span class="arrow">➔</span>
                    <input asp-for="To" class="edit-input location-input" placeholder="До" maxlength="22" required />
                </h2>
                <p class="date-time">
                    <strong>Дата и час:</strong>
                    <input asp-for="DepartureTime" type="datetime-local" class="edit-input" required />
                    <span asp-validation-for="DepartureTime" class="text-danger"></span>
                </p>
                <p class="passengers">
                    <strong>Пътници:</strong>
                    <input asp-for="NumberOfPassengers" type="number" min="1" class="edit-input small-input" required />
                    <span asp-validation-for="NumberOfPassengers" class="text-danger"></span>
                </p>
                <div class="form-group form-check">
                    <input asp-for="IsPublic" class="form-check-input" type="checkbox" />
                    <label asp-for="IsPublic" class="form-check-label"></label>
                    <span asp-validation-for="IsPublic" class="text-danger"></span>
                </div>
            </div>

            <div class="ticket-center">
                <div class="perforation"></div>
            </div>

            <div class="ticket-right" id="ticketRight" style="background:@Model.RightColor; color:@Model.TextColor;">
                <div class="barcode"></div>
                <div class="serial-number">ID: @Model.Id</div>
                <div class="actions">
                    <button type="submit" class="btn btn-edit">Запази</button>
                    <a asp-action="Index" class="btn btn-delete">Отказ</a>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const maxLength = 22;
            const inputs = document.querySelectorAll('input[asp-for="From"], input[asp-for="To"]');

            // Ограничаване на дължината на входа
            inputs.forEach(input => {
                input.addEventListener('input', () => {
                    if (input.value.length > maxLength) {
                        input.value = input.value.slice(0, maxLength);
                    }
                });
            });

            const leftPicker = document.getElementById('leftColorPicker');
            const rightPicker = document.getElementById('rightColorPicker');
            const textPicker = document.getElementById('textColorPicker');

            const ticketLeft = document.getElementById('ticketLeft');
            const ticketRight = document.getElementById('ticketRight');

            const arrow = ticketLeft.querySelector('.arrow');
            const dateTimeLabel = ticketLeft.querySelector('.date-time strong');
            const passengersLabel = ticketLeft.querySelector('.passengers strong');

            const buttonTextColor = "#ffffff"; // Фиксиран цвят за бутоните

            let currentTextColor = textPicker.value;
            let currentLeftColor = leftPicker.value;
            let currentRightColor = rightPicker.value;

            function applyTextColor() {
                // --- ЛЯВА ЧАСТ ---
                const leftInputs = ticketLeft.querySelectorAll('input.edit-input');
                const leftTextElements = [...leftInputs, arrow, dateTimeLabel, passengersLabel];
                leftTextElements.forEach(el => {
                    el.style.transition = "none";
                    el.style.color = currentTextColor;
                    if (el.tagName === 'INPUT') {
                        el.style.borderColor = currentTextColor;
                        el.style.setProperty('--placeholder-color', currentTextColor);
                    }
                });

                // --- ДЯСНА ЧАСТ ---
                // Всички текстови елементи, включително "Публичен билет"
                const rightTextElements = ticketRight.querySelectorAll('*:not(.serial-number):not(.actions)');
                rightTextElements.forEach(el => {
                    if (el.tagName !== 'BUTTON' && el.tagName !== 'A' && el.tagName !== 'INPUT') {
                        el.style.transition = "none";
                        el.style.color = currentTextColor;
                    }
                });

                // Бутоните си остават с фиксиран цвят
                ticketRight.querySelectorAll('.actions button, .actions a').forEach(btn => {
                    btn.style.transition = "none";
                    btn.style.color = buttonTextColor;
                });
            }

            // Слушатели за промяна на цветовете
            leftPicker.addEventListener('input', () => {
                currentLeftColor = leftPicker.value;
                ticketLeft.style.backgroundColor = currentLeftColor;
                applyTextColor();
            });

            rightPicker.addEventListener('input', () => {
                currentRightColor = rightPicker.value;
                ticketRight.style.backgroundColor = currentRightColor;
                applyTextColor();
            });

            textPicker.addEventListener('input', () => {
                currentTextColor = textPicker.value;
                applyTextColor();
            });

            // Инициално задаване на цветовете
            ticketLeft.style.backgroundColor = currentLeftColor;
            ticketRight.style.backgroundColor = currentRightColor;
            applyTextColor();
        });
    </script>





}

<style>
    body {
        background: #ececec;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
    }

    .ticket-wrapper {
        max-width: 1000px;
        margin: 50px auto;
        padding: 0 20px;
    }

    .page-title {
        text-align: center;
        font-size: 2.5rem;
        margin-bottom: 30px;
        color: #222;
        font-weight: 700;
        letter-spacing: 1.2px;
    }

    .color-controls label {
        margin-right: 15px;
        font-weight: 600;
    }

    .real-ticket {
        display: flex;
        background: linear-gradient(145deg, #fafafa, #e6e6e6);
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 10px 20px rgba(0,0,0,0.15), inset 0 0 8px rgba(255,255,255,0.7);
        overflow: hidden;
        cursor: default;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1.5px solid #bbb;
        position: relative;
        font-weight: 600;
        user-select: none;
    }

    .ticket-left, .ticket-right {
        padding: 25px 30px;
        flex: 1;
        position: relative;
        z-index: 10;
    }

    .ticket-left {
        background: #e0f2f1;
        border-right: 1.5px dashed #999;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

        .ticket-left h2 {
            font-size: 2rem;
            margin-bottom: 12px;
            color: #00796b;
            text-shadow: 0 1px 1px #a0d4cf;
            letter-spacing: 1.2px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .ticket-left p {
            font-size: 1.1rem;
            color: #004d40;
            margin: 6px 0;
            display: flex;
            flex-direction: column;
        }

        .ticket-left h2 .arrow {
            font-size: 2rem;
            transition: color 0.3s ease;
        }

    .edit-input {
        background: transparent;
        border: none;
        border-bottom: 1.5px dashed #004d40;
        color: #004d40;
        font-weight: 600;
        font-size: 1.1rem;
        padding: 6px 4px;
        transition: border-color 0.3s ease, color 0.3s ease;
        max-width: 100%;
    }

        .edit-input:focus {
            outline: none;
            border-color: #4caf50;
        }

    .location-input {
        width: 100%;
    }

    .small-input {
        max-width: 150px;
        font-size: 1.1rem;
    }

    .ticket-center {
        width: 30px;
        background: repeating-linear-gradient(to bottom, transparent, transparent 8px, #999 8px, #999 10px);
        position: relative;
    }

        .ticket-center::before,
        .ticket-center::after {
            content: "";
            position: absolute;
            width: 30px;
            height: 30px;
            background: #ececec;
            border-radius: 50%;
            left: 50%;
            transform: translateX(-50%);
            box-shadow: inset 3px 3px 5px rgba(255,255,255,0.9), inset -3px -3px 5px rgba(0,0,0,0.15);
            z-index: 11;
        }

        .ticket-center::before {
            top: -15px;
        }

        .ticket-center::after {
            bottom: -15px;
        }

    .ticket-right {
        background: #fff;
        box-shadow: inset 0 4px 10px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border-left: 1.5px dashed #999;
    }

    .barcode {
        width: 100%;
        height: 60px;
        background: repeating-linear-gradient(to right, #000, #000 3px, #fff 3px, #fff 6px, #000 6px, #000 9px, #fff 9px, #fff 12px, #000 12px, #000 15px, #fff 15px, #fff 18px);
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.25);
        margin-bottom: 18px;
    }

    .serial-number {
        font-size: 0.9rem;
        font-family: 'Courier New', Courier, monospace;
        color: #666;
        margin-bottom: 15px;
        text-align: center;
        user-select: text;
    }

    .actions {
        display: flex;
        justify-content: space-around;
        padding-bottom: 10px;
    }

    .btn {
        padding: 10px 22px;
        border-radius: 25px;
        text-decoration: none;
        font-size: 0.95rem;
        font-weight: 700;
        cursor: pointer;
        transition: background 0.3s ease, transform 0.2s ease;
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
        user-select: none;
        border: none;
    }

    .btn-edit {
        background: #ff9800;
        color: white;
    }

        .btn-edit:hover {
            background: #ef6c00;
            transform: translateY(-3px);
        }

    .btn-delete {
        background: #f44336;
        color: white;
    }

        .btn-delete:hover {
            background: #d32f2f;
            transform: translateY(-3px);
        }
</style>
